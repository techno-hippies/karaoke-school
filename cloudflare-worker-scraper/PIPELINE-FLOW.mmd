```mermaid
flowchart TD
    Start[TikTok Video Scraped] --> CheckCopyright{Copyright<br/>Status?}
    CheckCopyright -->|Copyrighted| SpotifyTrack[Step 1: Fetch Spotify Track<br/>Get ISRC, title, artists]
    CheckCopyright -->|Original/Unknown| End1[Stop - Not Copyrighted]

    SpotifyTrack --> ISWC_Gate[üö® Step 2: ISWC LOOKUP GATE]

    ISWC_Gate --> TryMB[Try MusicBrainz<br/>Fast, ~40% success]
    TryMB -->|Found| FoundMB[‚úì ISWC from MusicBrainz]
    TryMB -->|Not Found| TryQuansic[Try Quansic Service<br/>Slow, ~85% success]

    TryQuansic -->|Found| FoundQuansic[‚úì ISWC from Quansic]
    TryQuansic -->|Not Found| TryMLC[Try MLC API<br/>Medium, ~60% success]

    TryMLC -->|Found| FoundMLC[‚úì ISWC from MLC]
    TryMLC -->|Not Found| NoISWC[‚ùå No ISWC Found]

    FoundMB --> UpdateFlag[Update: has_iswc = true<br/>iswc_source = 'musicbrainz']
    FoundQuansic --> UpdateFlag2[Update: has_iswc = true<br/>iswc_source = 'quansic']
    FoundMLC --> UpdateFlag3[Update: has_iswc = true<br/>iswc_source = 'mlc']
    NoISWC --> UpdateFlagFalse[Update: has_iswc = false]

    UpdateFlag --> CheckGate{has_iswc<br/>= true?}
    UpdateFlag2 --> CheckGate
    UpdateFlag3 --> CheckGate
    UpdateFlagFalse --> CheckGate

    CheckGate -->|NO| StopEnrichment[‚ùå STOP<br/>Track not viable for licensing<br/>Save API quota]
    CheckGate -->|YES| ContinueEnrichment[‚úÖ CONTINUE to deep enrichment]

    ContinueEnrichment --> Step3[Step 3: Spotify Artists<br/>Filter: has_iswc = true<br/>genres, followers, popularity]

    Step3 --> Step4[Step 4: Genius Songs<br/>Filter: has_iswc = true<br/>Social verification]

    Step4 --> Step5[Step 5: Genius Artists<br/>Instagram, Twitter, verified status]

    Step5 --> Step6[Step 6: Genius Referents<br/>Lyrics annotations with votes]

    Step6 --> Step7[Step 7: MusicBrainz Artists<br/>Filter: has_iswc = true<br/>ISNI, IPI, country]

    Step7 --> Step8[Step 8: Quansic Artists<br/>Filter: has_iswc = true<br/>IPN, Luminate ID]

    Step8 --> ManualMLC[Step 9: MLC Licensing<br/>MANUAL TRIGGER<br/>POST /enrich-mlc-by-iswc]

    ManualMLC --> MLCData[Get writers, publishers,<br/>total_publisher_share]

    MLCData --> ReadyCheck{Ready for<br/>Audio Download?}

    ReadyCheck -->|has_iswc = true<br/>AND<br/>MLC ‚â•98%| ReadyForAudio[‚úÖ Ready for Audio]
    ReadyCheck -->|Missing MLC or<br/>share &lt; 98%| NotReady[Not Ready]

    ReadyForAudio --> AudioDownload[Step 10: Audio Download<br/>POST /audio/download-tracks]

    AudioDownload --> FreyrService[freyr-service:<br/>/download-and-store]

    FreyrService --> DownloadAudio[Download Audio<br/>freyr ‚Üí yt-dlp fallback]

    DownloadAudio --> VerifyAudio[Verify with AcoustID<br/>chromaprint fingerprinting]

    VerifyAudio -->|Verified| UploadGrove[Upload to Grove IPFS<br/>chain_id: 37111 Lens Network]
    VerifyAudio -->|Failed| RetryDownload[Retry with yt-dlp]

    RetryDownload --> VerifyAudio

    UploadGrove --> GetCID[Get Grove CID<br/>grove_url]

    GetCID --> StoreNeon[Store in Neon DB<br/>track_audio_files table]

    StoreNeon --> DeleteLocal[Delete local file<br/>cleanup]

    DeleteLocal --> Complete[‚úÖ Complete Pipeline<br/>Ready for Demucs + fal.ai]

    StopEnrichment --> End2[End]
    NotReady --> End3[End - Wait for MLC]
    End1 --> End4[End]

    style ISWC_Gate fill:#ff6b6b,stroke:#c92a2a,color:#fff
    style CheckGate fill:#ff6b6b,stroke:#c92a2a,color:#fff
    style StopEnrichment fill:#868e96,stroke:#495057,color:#fff
    style ContinueEnrichment fill:#51cf66,stroke:#2f9e44,color:#fff
    style ReadyForAudio fill:#51cf66,stroke:#2f9e44,color:#fff
    style Complete fill:#51cf66,stroke:#2f9e44,color:#fff
    style UpdateFlag fill:#74c0fc,stroke:#1971c2,color:#fff
    style UpdateFlag2 fill:#74c0fc,stroke:#1971c2,color:#fff
    style UpdateFlag3 fill:#74c0fc,stroke:#1971c2,color:#fff
    style UpdateFlagFalse fill:#ffa94d,stroke:#e67700,color:#fff
```

## Key Decision Points

### üö® ISWC Gate (Step 2)
- **Critical**: Without ISWC, tracks cannot be licensed for karaoke
- **Optimization**: Check ISWC FIRST before expensive enrichment
- **Sequential Lookup**: MusicBrainz ‚Üí Quansic ‚Üí MLC (90-95% combined success)
- **Result**: Sets `has_iswc` flag and `iswc_source` column

### ‚úÖ Continue or ‚ùå Stop
- **has_iswc = true**: Continue to Steps 3-10 (deep enrichment + audio)
- **has_iswc = false**: STOP enrichment (save API quota)

### Ready for Audio Download
- **Requirements**: `has_iswc = true` AND `total_publisher_share >= 98%`
- **Query**: Simple indexed lookup on `has_iswc` flag

### Audio Download Workflow
- **Service**: freyr-service on Akash (deployed)
- **Flow**: Download ‚Üí Verify ‚Üí Grove ‚Üí Neon ‚Üí Cleanup
- **Writes to Neon**: freyr-service handles DB writes atomically
